.reader {
  position: relative;
  height: 100%;
  bottom: 0;
  left: 0;
  isolation: isolate;
  width: 100%;
  z-index: 1000;
  

  @media (pointer: coarse) {
    position: fixed;

    width: 100vw;
    height: 100vh;
  }

  &.readerWithTransparentControls :global(.reader-control-button),
  &.readerWithHollowControls :global(.reader-control-button) {
    background-color: transparent;
    & svg {
      filter: drop-shadow(0 0 5px #000);
    }
  }
  &.readerWithHollowControls :global(.reader-control-button) {
    background-color: transparent;
    border: 1px solid rgb(158, 158, 158);
  }
  /* &.readerWithTransparentControls :global(.reader-control-button) {

    } */
  &.hideCursor {
    cursor: none;
  }
}
.inner {
  position: relative;
  display: flex;
  width: 100%;
  height: 100%;
}

.content {
  position: relative;
  flex: 1;
  z-index: 3;
  overflow: hidden;
  height: 100%;
}

.aside {
  position: relative;
  flex: none;
  --width: 330px;
  //z-index: 4;
  @media screen and (max-width: 1000px) {
    display: none;
  }
}

.dummyButton {
  visibility: hidden;
  pointer-events: none;
  transition: transform 0.1s ease-in-out;
  will-change: transform;
  @media only screen and (max-width: 1000px) {
    transform: scaleX(0);
  }
  &.dummyButtonHidden {
    transform: scaleX(0);
  }
  margin-left: 0.5rem;
}

.slash {
  width: 2px;
  margin: 0 0.5em;
  height: 100%;
  position: relative;
  display: inline-block;
  &::before {
    content: "";
    position: absolute;
    left: 50%;
    top: 50%;
    height: 110%;
    background: currentColor;
    opacity: 0.6;
    width: 100%;
    transform: translate(-50%, calc(-50% - 1px)) rotateZ(15deg);
    transform-origin: center center;
  }
}

.noChapters {
  padding: 1rem;
  padding-top: 3rem;
  box-sizing: border-box;
  display: flex;
  align-items: center;
  justify-content: center;
}
